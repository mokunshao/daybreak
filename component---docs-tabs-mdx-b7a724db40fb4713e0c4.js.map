{"version":3,"sources":["webpack:///../docs/tabs.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Playground","Props","Tabs","TabPane","active","setActive","onChange","index","tab","isVertical","isMDXComponent"],"mappings":"yhBAUO,IAAMA,EAAe,Q,+LAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,+CAIL,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oSAAySC,QAAS,CACnVL,QACAH,kBACAS,oBACAC,eACAC,UACAC,SACAC,aACCT,QAAQ,eACR,WAAM,MACuBK,mBAAS,GAA9BK,EADF,KACUC,EADV,KAEL,OAAO,uBACT,YAAC,IAAD,CAAMD,OAAQA,EAAQE,SAAU,SAAAC,GAAK,OAAIF,EAAUE,IAAQb,QAAQ,QACjE,YAAC,IAAD,CAASc,IAAI,aAAad,QAAQ,WAAlC,iBACA,YAAC,IAAD,CAASc,IAAI,SAASd,QAAQ,WAA9B,sBAKJ,iBAAQ,CACN,GAAM,cADR,cAGA,8CAA6B,0BAAYC,WAAW,KAAvB,cAA7B,iBAAqG,0BAAYA,WAAW,KAAvB,QAArG,OAA6J,0BAAYA,WAAW,KAAvB,QAA7J,2CACA,0BAAS,0BAAYA,WAAW,KAAvB,QAAT,MAAgE,0BAAYA,WAAW,KAAvB,cAAhE,UAAiI,0BAAYA,WAAW,KAAvB,QAAjI,mBACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uSAA4SC,QAAS,CACtVL,QACAH,kBACAS,oBACAC,eACAC,UACAC,SACAC,aACCT,QAAQ,eACR,WAAM,MACuBK,mBAAS,GAA9BK,EADF,KACUC,EADV,KAEL,OAAO,uBACT,YAAC,IAAD,CAAMI,YAAU,EAACL,OAAQA,EAAQE,SAAU,SAAAC,GAAK,OAAIF,EAAUE,IAAQb,QAAQ,QAC5E,YAAC,IAAD,CAASc,IAAI,OAAOd,QAAQ,WAA5B,iBACA,YAAC,IAAD,CAASc,IAAI,OAAOd,QAAQ,WAA5B,uB,sLASRH,EAAWmB,gBAAiB","file":"component---docs-tabs-mdx-b7a724db40fb4713e0c4.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/daybreak/daybreak/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport Tabs from '../src/tabs/tabs.tsx';\nimport TabPane from '../src/tabs/tab-pane.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Tabs,TabPane } from 'daybreak';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [active, setActive] = useState(0)\\n  return (\\n    <div>\\n      <Tabs active={active} onChange={index => setActive(index)}>\\n        <TabPane tab=\\\"1121999999\\\">Tab 1 Content</TabPane>\\n        <TabPane tab=\\\"okokkk\\\">Tab 2 Content</TabPane>\\n      </Tabs>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Tabs,\n      TabPane\n    }} mdxType=\"Playground\">\n      {() => {\n        const [active, setActive] = useState(0);\n        return <div>\n      <Tabs active={active} onChange={index => setActive(index)} mdxType=\"Tabs\">\n        <TabPane tab='1121999999' mdxType=\"TabPane\">Tab 1 Content</TabPane>\n        <TabPane tab=\"okokkk\" mdxType=\"TabPane\">Tab 2 Content</TabPane>\n      </Tabs>\n    </div>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"isvertical\"\n    }}>{`isVertical`}</h3>\n    <p>{`When the value of the `}<inlineCode parentName=\"p\">{`isVertical`}</inlineCode>{` attribute of `}<inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`, the tabs will be arranged vertically.`}</p>\n    <p>{`当 `}<inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{` 的 `}<inlineCode parentName=\"p\">{`isVertical`}</inlineCode>{` 属性的值为 `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` 时，tabs 将会垂直排列。`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [active, setActive] = useState(1)\\n  return (\\n    <div>\\n      <Tabs isVertical active={active} onChange={index => setActive(index)}>\\n        <TabPane tab=\\\"1121\\\">Tab 1 Content</TabPane>\\n        <TabPane tab=\\\"okok\\\">Tab 2 Content</TabPane>\\n      </Tabs>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Tabs,\n      TabPane\n    }} mdxType=\"Playground\">\n      {() => {\n        const [active, setActive] = useState(1);\n        return <div>\n      <Tabs isVertical active={active} onChange={index => setActive(index)} mdxType=\"Tabs\">\n        <TabPane tab='1121' mdxType=\"TabPane\">Tab 1 Content</TabPane>\n        <TabPane tab=\"okok\" mdxType=\"TabPane\">Tab 2 Content</TabPane>\n      </Tabs>\n    </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}