(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{xv4D:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return u})),n.d(t,"default",(function(){return O}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("/FXl"),o=n("TjRS"),l=n("mXGw"),i=n("ZFoC"),b=n("DIgD"),r=n("LE9S"),c=n("8hsF");n("aD51");function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var u={};void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/dialog.mdx"}});var s={_frontmatter:u},d=o.a;function O(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(d,p({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"dialog"},"Dialog"),Object(a.b)("pre",null,Object(a.b)("code",p({parentName:"pre"},{className:"language-javascript"}),"import { Dialog } from 'daybreak';\n")),Object(a.b)("h2",{id:"basic-usage"},"Basic usage"),Object(a.b)("p",null,"The required parameters for ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," are ",Object(a.b)("inlineCode",{parentName:"p"},"visible")," and ",Object(a.b)("inlineCode",{parentName:"p"},"onClose"),",. You can pass the button you need to display to ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," through the buttons parameter."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 必须的参数有 ",Object(a.b)("inlineCode",{parentName:"p"},"visible")," 和 ",Object(a.b)("inlineCode",{parentName:"p"},"onClose"),"，你可以通过 buttons 参数向 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 传递需要展示的按钮。"),Object(a.b)(i.c,{__position:0,__code:'() => {\n  const [visible, setVisible] = useState(false)\n  return (\n    <div>\n      <Button type="button" onClick={() => setVisible(!visible)}>\n        Open\n      </Button>\n      <Dialog\n        visible={visible}\n        buttons={[\n          <Button type="button" onClick={() => setVisible(false)}>\n            Yes\n          </Button>,\n          <Button type="button" onClick={() => setVisible(false)}>\n            No\n          </Button>,\n        ]}\n        onClose={() => setVisible(false)}\n      >\n        hello\n      </Dialog>\n    </div>\n  )\n}',__scope:{props:n,DefaultLayout:o.a,useState:l.useState,Playground:i.c,Props:i.d,Example:b.a,Dialog:r.c,Alert:r.a,Confirm:r.b,Modal:r.d,Button:c.c},mdxType:"Playground"},(function(){var e=Object(l.useState)(!1),t=e[0],n=e[1];return Object(a.b)("div",null,Object(a.b)(c.c,{type:"button",onClick:function(){return n(!t)},mdxType:"Button"},"Open"),Object(a.b)(r.c,{visible:t,buttons:[Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"Yes"),Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"No")],onClose:function(){return n(!1)},mdxType:"Dialog"},"hello"))})),Object(a.b)("h2",{id:"dont-close-when-click-the-mask"},"Don't Close When Click the Mask"),Object(a.b)("p",null,"The default value of the parameter ",Object(a.b)("inlineCode",{parentName:"p"},"closeOnClickMask")," is ",Object(a.b)("inlineCode",{parentName:"p"},"true"),". When you set this attribute to ",Object(a.b)("inlineCode",{parentName:"p"},"false"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," will not be closed when you click on the mask layer."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"closeOnClickMask")," 参数的默认值为 ",Object(a.b)("inlineCode",{parentName:"p"},"true"),"，当你把该属性设置为 ",Object(a.b)("inlineCode",{parentName:"p"},"false")," 时，你点击遮罩层时将不会关闭 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog"),"。"),Object(a.b)(i.c,{__position:1,__code:'() => {\n  const [visible, setVisible] = useState(false)\n  return (\n    <div>\n      <Button type="button" onClick={() => setVisible(!visible)}>\n        Open\n      </Button>\n      <Dialog\n        visible={visible}\n        buttons={[\n          <Button type="button" onClick={() => setVisible(false)}>\n            Yes\n          </Button>,\n          <Button type="button" onClick={() => setVisible(false)}>\n            No\n          </Button>,\n        ]}\n        onClose={() => setVisible(false)}\n        closeOnClickMask={false}\n      >\n        hello\n      </Dialog>\n    </div>\n  )\n}',__scope:{props:n,DefaultLayout:o.a,useState:l.useState,Playground:i.c,Props:i.d,Example:b.a,Dialog:r.c,Alert:r.a,Confirm:r.b,Modal:r.d,Button:c.c},mdxType:"Playground"},(function(){var e=Object(l.useState)(!1),t=e[0],n=e[1];return Object(a.b)("div",null,Object(a.b)(c.c,{type:"button",onClick:function(){return n(!t)},mdxType:"Button"},"Open"),Object(a.b)(r.c,{visible:t,buttons:[Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"Yes"),Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"No")],onClose:function(){return n(!1)},closeOnClickMask:!1,mdxType:"Dialog"},"hello"))})),Object(a.b)("h2",{id:"dont-close-when-the-esc-key-is-pressed"},"Don't Close When the 'Esc' key is pressed"),Object(a.b)("p",null,"The default value of the ",Object(a.b)("inlineCode",{parentName:"p"},"closeOnEsc")," parameter is ",Object(a.b)("inlineCode",{parentName:"p"},"true"),". When you set the value of this attribute to ",Object(a.b)("inlineCode",{parentName:"p"},"false"),", ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," will not be closed when you press the ",Object(a.b)("inlineCode",{parentName:"p"},"ESC")," key."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"closeOnEsc")," 参数的默认值为 ",Object(a.b)("inlineCode",{parentName:"p"},"true"),"，当你把该属性的值设置为 ",Object(a.b)("inlineCode",{parentName:"p"},"false")," 时，你按 ",Object(a.b)("inlineCode",{parentName:"p"},"ESC")," 键时将不会关闭 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog"),"。"),Object(a.b)(i.c,{__position:2,__code:'() => {\n  const [visible, setVisible] = useState(false)\n  return (\n    <div>\n      <Button type="button" onClick={() => setVisible(!visible)}>\n        Open\n      </Button>\n      <Dialog\n        visible={visible}\n        buttons={[\n          <Button type="button" onClick={() => setVisible(false)}>\n            Yes\n          </Button>,\n          <Button type="button" onClick={() => setVisible(false)}>\n            No\n          </Button>,\n        ]}\n        onClose={() => setVisible(false)}\n        closeOnEsc={false}\n      >\n        hello\n      </Dialog>\n    </div>\n  )\n}',__scope:{props:n,DefaultLayout:o.a,useState:l.useState,Playground:i.c,Props:i.d,Example:b.a,Dialog:r.c,Alert:r.a,Confirm:r.b,Modal:r.d,Button:c.c},mdxType:"Playground"},(function(){var e=Object(l.useState)(!1),t=e[0],n=e[1];return Object(a.b)("div",null,Object(a.b)(c.c,{type:"button",onClick:function(){return n(!t)},mdxType:"Button"},"Open"),Object(a.b)(r.c,{visible:t,buttons:[Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"Yes"),Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"No")],onClose:function(){return n(!1)},closeOnEsc:!1,mdxType:"Dialog"},"hello"))})),Object(a.b)("h2",{id:"prevent-background-scrolling"},"Prevent background scrolling"),Object(a.b)("p",null,"The default value of the ",Object(a.b)("inlineCode",{parentName:"p"},"SecretentBackgroundScrolling")," parameter is ",Object(a.b)("inlineCode",{parentName:"p"},"true"),". When you set the value of this attribute to ",Object(a.b)("inlineCode",{parentName:"p"},"false"),", the page will not be scrollable when ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," is displayed."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"preventBackgroundScrolling")," 参数的默认值为 ",Object(a.b)("inlineCode",{parentName:"p"},"true"),"，当你把该属性的值设置为 ",Object(a.b)("inlineCode",{parentName:"p"},"false")," 时，在 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 处于展示状态时页面将是不可滚动的。"),Object(a.b)(i.c,{__position:3,__code:'() => {\n  const [visible, setVisible] = useState(false)\n  return (\n    <div>\n      <Button type="button" onClick={() => setVisible(!visible)}>\n        Open\n      </Button>\n      <Dialog\n        visible={visible}\n        buttons={[\n          <Button type="button" onClick={() => setVisible(false)}>\n            Yes\n          </Button>,\n          <Button type="button" onClick={() => setVisible(false)}>\n            No\n          </Button>,\n        ]}\n        onClose={() => setVisible(false)}\n        preventBackgroundScrolling\n      >\n        hello\n      </Dialog>\n    </div>\n  )\n}',__scope:{props:n,DefaultLayout:o.a,useState:l.useState,Playground:i.c,Props:i.d,Example:b.a,Dialog:r.c,Alert:r.a,Confirm:r.b,Modal:r.d,Button:c.c},mdxType:"Playground"},(function(){var e=Object(l.useState)(!1),t=e[0],n=e[1];return Object(a.b)("div",null,Object(a.b)(c.c,{type:"button",onClick:function(){return n(!t)},mdxType:"Button"},"Open"),Object(a.b)(r.c,{visible:t,buttons:[Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"Yes"),Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"No")],onClose:function(){return n(!1)},preventBackgroundScrolling:!0,mdxType:"Dialog"},"hello"))})),Object(a.b)("h2",{id:"hide-mask"},"Hide Mask"),Object(a.b)("p",null,"Setting the value of the ",Object(a.b)("inlineCode",{parentName:"p"},"hasMask")," property to ",Object(a.b)("inlineCode",{parentName:"p"},"false")," can hide the mask layer."),Object(a.b)("p",null,"将 ",Object(a.b)("inlineCode",{parentName:"p"},"hasMask")," 属性的值设置为 ",Object(a.b)("inlineCode",{parentName:"p"},"false")," 可以隐藏遮罩层。"),Object(a.b)(i.c,{__position:4,__code:'() => {\n  const [visible, setVisible] = useState(false)\n  return (\n    <div>\n      <Button type="button" onClick={() => setVisible(!visible)}>\n        Open\n      </Button>\n      <Dialog\n        visible={visible}\n        hasMask={false}\n        buttons={[\n          <Button type="button" onClick={() => setVisible(false)}>\n            Yes\n          </Button>,\n          <Button type="button" onClick={() => setVisible(false)}>\n            No\n          </Button>,\n        ]}\n        onClose={() => setVisible(false)}\n      >\n        hello\n      </Dialog>\n    </div>\n  )\n}',__scope:{props:n,DefaultLayout:o.a,useState:l.useState,Playground:i.c,Props:i.d,Example:b.a,Dialog:r.c,Alert:r.a,Confirm:r.b,Modal:r.d,Button:c.c},mdxType:"Playground"},(function(){var e=Object(l.useState)(!1),t=e[0],n=e[1];return Object(a.b)("div",null,Object(a.b)(c.c,{type:"button",onClick:function(){return n(!t)},mdxType:"Button"},"Open"),Object(a.b)(r.c,{visible:t,hasMask:!1,buttons:[Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"Yes"),Object(a.b)(c.c,{type:"button",onClick:function(){return n(!1)},mdxType:"Button"},"No")],onClose:function(){return n(!1)},mdxType:"Dialog"},"hello"))})),Object(a.b)("h2",{id:"modal"},"Modal"),Object(a.b)("p",null,"You can call the ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," component through the ",Object(a.b)("inlineCode",{parentName:"p"},"Modal")," function. If you need to override the setting of ",Object(a.b)("inlineCode",{parentName:"p"},"Modal"),", you can pass the parameters accepted by ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," through the parameter ",Object(a.b)("inlineCode",{parentName:"p"},"override"),"."),Object(a.b)("p",null,"你可以通过 ",Object(a.b)("inlineCode",{parentName:"p"},"Modal")," 函数调用 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 组件，如果需要覆盖 ",Object(a.b)("inlineCode",{parentName:"p"},"Modal")," 的设置，可以通过 ",Object(a.b)("inlineCode",{parentName:"p"},"override")," 参数传入 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 接受的参数。"),Object(a.b)("pre",null,Object(a.b)("code",p({parentName:"pre"},{className:"language-javascript"}),"import { Modal } from 'daybreak';\n")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",p({parentName:"tr"},{align:null}),"param"),Object(a.b)("th",p({parentName:"tr"},{align:null}),"type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"content"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"React.ReactNode"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"buttons?"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"Array<React.ReactElement>"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"onClose?"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"Function"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"override?"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"{ [k: string]: any; }"))))),Object(a.b)(i.c,{__position:5,__code:'() => {\n  const openModal = () => {\n    const close = Modal(<p>This is a modal.</p>, [\n      <Button type="button" onClick={() => close()}>\n        Close\n      </Button>,\n    ])\n  }\n  return (\n    <Button type="button" onClick={openModal}>\n      Open\n    </Button>\n  )\n}',__scope:{props:n,DefaultLayout:o.a,useState:l.useState,Playground:i.c,Props:i.d,Example:b.a,Dialog:r.c,Alert:r.a,Confirm:r.b,Modal:r.d,Button:c.c},mdxType:"Playground"},(function(){return Object(a.b)(c.c,{type:"button",onClick:function(){var e=Object(r.d)(Object(a.b)("p",null,"This is a modal."),[Object(a.b)(c.c,{type:"button",onClick:function(){return e()},mdxType:"Button"},"Close")])},mdxType:"Button"},"Open")})),Object(a.b)("h2",{id:"alert"},"Alert"),Object(a.b)("p",null,"You can call the ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," component through the ",Object(a.b)("inlineCode",{parentName:"p"},"Alert")," function. If you need to override the setting of ",Object(a.b)("inlineCode",{parentName:"p"},"Alert"),", you can pass the parameters accepted by ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," through the parameter ",Object(a.b)("inlineCode",{parentName:"p"},"override"),"."),Object(a.b)("p",null,"你可以通过 ",Object(a.b)("inlineCode",{parentName:"p"},"Alert")," 函数调用 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 组件，如果需要覆盖 ",Object(a.b)("inlineCode",{parentName:"p"},"Alert")," 的设置，可以通过 ",Object(a.b)("inlineCode",{parentName:"p"},"override")," 参数传入 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 接受的参数。"),Object(a.b)("pre",null,Object(a.b)("code",p({parentName:"pre"},{className:"language-javascript"}),"import { Alert } from 'daybreak';\n")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",p({parentName:"tr"},{align:null}),"param"),Object(a.b)("th",p({parentName:"tr"},{align:null}),"type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"content"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"React.ReactNode"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"override?"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"{ [k: string]: any; }"))))),Object(a.b)(i.c,{__position:6,__code:"<Button type=\"button\" onClick={() => Alert('This is an alert.')}>\n  Open\n</Button>",__scope:{props:n,DefaultLayout:o.a,useState:l.useState,Playground:i.c,Props:i.d,Example:b.a,Dialog:r.c,Alert:r.a,Confirm:r.b,Modal:r.d,Button:c.c},mdxType:"Playground"},Object(a.b)(c.c,{type:"button",onClick:function(){return Object(r.a)("This is an alert.")},mdxType:"Button"},"Open")),Object(a.b)("h2",{id:"confirm"},"Confirm"),Object(a.b)("p",null,"You can call the ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," component through the ",Object(a.b)("inlineCode",{parentName:"p"},"Confirm")," function. If you need to override the setting of ",Object(a.b)("inlineCode",{parentName:"p"},"Confirm"),", you can pass the parameters accepted by ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," through the parameter ",Object(a.b)("inlineCode",{parentName:"p"},"override"),"."),Object(a.b)("p",null,"你可以通过 ",Object(a.b)("inlineCode",{parentName:"p"},"Confirm")," 函数调用 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 组件，如果需要覆盖 ",Object(a.b)("inlineCode",{parentName:"p"},"Confirm")," 的设置，可以通过 ",Object(a.b)("inlineCode",{parentName:"p"},"override")," 参数传入 ",Object(a.b)("inlineCode",{parentName:"p"},"Dialog")," 接受的参数。"),Object(a.b)("pre",null,Object(a.b)("code",p({parentName:"pre"},{className:"language-javascript"}),"import { Confirm } from 'daybreak';\n")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",p({parentName:"tr"},{align:null}),"param"),Object(a.b)("th",p({parentName:"tr"},{align:null}),"type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"content"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"React.ReactNode"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"onOk?"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"Function"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"onCancel?"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"Function"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",p({parentName:"tr"},{align:null}),"override?"),Object(a.b)("td",p({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"{ [k: string]: any; }"))))),Object(a.b)(i.c,{__position:7,__code:"<Button type=\"button\" onClick={() => Confirm('This is an confirm.')}>\n  Open\n</Button>",__scope:{props:n,DefaultLayout:o.a,useState:l.useState,Playground:i.c,Props:i.d,Example:b.a,Dialog:r.c,Alert:r.a,Confirm:r.b,Modal:r.d,Button:c.c},mdxType:"Playground"},Object(a.b)(c.c,{type:"button",onClick:function(){return Object(r.b)("This is an confirm.")},mdxType:"Button"},"Open")))}O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/dialog.mdx"}}),O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-dialog-mdx-0cb9b4e4725a922dfe12.js.map