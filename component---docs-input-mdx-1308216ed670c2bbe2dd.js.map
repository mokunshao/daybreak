{"version":3,"sources":["webpack:///../docs/input.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Playground","Props","Input","value","setValue","placeholder","onChange","e","target","clearable","onClear","value2","setValue2","type","disabled","isMDXComponent"],"mappings":"4gBASO,IAAMA,EAAe,Q,gMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,wCAIL,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+LAAkMC,QAAS,CAC5OL,QACAH,kBACAS,oBACAC,eACAC,UACAC,WACCR,QAAQ,eACZ,WAAM,MACyBK,mBAAS,IAA5BI,EADN,KACaC,EADb,KAED,OAAO,YAAC,IAAD,CAAOC,YAAY,SAASF,MAAOA,EAAOG,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEC,OAAOL,QAAQT,QAAQ,aAGtG,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,0BAAYC,WAAW,KAAvB,aAAH,aAAsE,0BAAYA,WAAW,KAAvB,WAAtE,kCACA,qBAAG,0BAAYA,WAAW,KAAvB,aAAH,UAAmE,0BAAYA,WAAW,KAAvB,WAAnE,YACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,0NAA+NC,QAAS,CACzQL,QACAH,kBACAS,oBACAC,eACAC,UACAC,WACCR,QAAQ,eACZ,WAAM,MACyBK,mBAAS,QAA5BI,EADN,KACaC,EADb,KAED,OAAO,YAAC,IAAD,CAAOK,WAAS,EAACN,MAAOA,EAAOG,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEC,OAAOL,QAAQO,QAAS,kBAAMN,EAAS,KAAKV,QAAQ,aAGxH,iBAAQ,CACN,GAAM,sBADR,sBAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,6fAAogBC,QAAS,CAC9iBL,QACAH,kBACAS,oBACAC,eACAC,UACAC,WACCR,QAAQ,eACZ,WAAM,MACyBK,mBAAS,QAA5BI,EADN,KACaC,EADb,OAE2BL,mBAAS,QAA9BY,EAFN,KAEcC,EAFd,KAGD,OAAO,uBACP,iCACA,YAAC,IAAD,CAAOC,KAAK,WAAWV,MAAOA,EAAOG,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEC,OAAOL,QAAQT,QAAQ,UACtF,qCACA,YAAC,IAAD,CAAOmB,KAAK,WAAWJ,WAAS,EAACN,MAAOQ,EAAQL,SAAU,SAAAC,GAAC,OAAIK,EAAUL,EAAEC,OAAOL,QAAQO,QAAS,kBAAME,EAAU,KAAKlB,QAAQ,cAIpI,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,iIAAoIC,QAAS,CAC9KL,QACAH,kBACAS,oBACAC,eACAC,UACAC,WACCR,QAAQ,eACZ,WAAM,MACyBK,mBAAS,IAA5BI,EADN,UAED,OAAO,YAAC,IAAD,CAAOW,UAAQ,EAACX,MAAOA,EAAOG,SAAU,SAAAC,GAAC,OAAIA,EAAEC,OAAOL,OAAOT,QAAQ,c,uLAOpFH,EAAWwB,gBAAiB","file":"component---docs-input-mdx-1308216ed670c2bbe2dd.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/daybreak/daybreak/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport Input from '../src/input/input.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Input } from 'daybreak';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  return (\\n    <Input\\n      placeholder=\\\"请输入...\\\"\\n      value={value}\\n      onChange={e => setValue(e.target.value)}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Input\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState('');\n        return <Input placeholder=\"请输入...\" value={value} onChange={e => setValue(e.target.value)} mdxType=\"Input\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"clearable\"\n    }}>{`Clearable`}</h2>\n    <p><inlineCode parentName=\"p\">{`clearable`}</inlineCode>{` prop and `}<inlineCode parentName=\"p\">{`onClear`}</inlineCode>{` prop should be used together.`}</p>\n    <p><inlineCode parentName=\"p\">{`clearable`}</inlineCode>{` 属性需要与 `}<inlineCode parentName=\"p\">{`onClear`}</inlineCode>{` 属性搭配使用。`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [value, setValue] = useState(\\'test\\')\\n  return (\\n    <Input\\n      clearable\\n      value={value}\\n      onChange={e => setValue(e.target.value)}\\n      onClear={() => setValue(\\'\\')}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Input\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState('test');\n        return <Input clearable value={value} onChange={e => setValue(e.target.value)} onClear={() => setValue('')} mdxType=\"Input\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"input-for-password\"\n    }}>{`Input for password`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [value, setValue] = useState(\\'test\\')\\n  const [value2, setValue2] = useState(\\'test\\')\\n  return (\\n    <div>\\n      <div>Basic:</div>\\n      <Input\\n        type=\\\"password\\\"\\n        value={value}\\n        onChange={e => setValue(e.target.value)}\\n      />\\n      <div>Clearable:</div>\\n      <Input\\n        type=\\\"password\\\"\\n        clearable\\n        value={value2}\\n        onChange={e => setValue2(e.target.value)}\\n        onClear={() => setValue2(\\'\\')}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Input\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState('test');\n        const [value2, setValue2] = useState('test');\n        return <div>\n        <div>Basic:</div>\n        <Input type=\"password\" value={value} onChange={e => setValue(e.target.value)} mdxType=\"Input\" />\n        <div>Clearable:</div>\n        <Input type=\"password\" clearable value={value2} onChange={e => setValue2(e.target.value)} onClear={() => setValue2('')} mdxType=\"Input\" />\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  return <Input disabled value={value} onChange={e => e.target.value} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Input\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState('');\n        return <Input disabled value={value} onChange={e => e.target.value} mdxType=\"Input\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}