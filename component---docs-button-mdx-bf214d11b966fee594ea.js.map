{"version":3,"sources":["webpack:///../docs/button.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Playground","Props","Button","mode","outlined","disabled","loading","setLoading","onClick","isMDXComponent"],"mappings":"4gBASO,IAAMA,EAAe,Q,iMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,uCAIL,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,yBAA0BC,QAAS,CACpEL,QACAH,kBACAS,oBACAC,eACAC,UACAC,YACCR,QAAQ,cACb,YAAC,IAAD,CAAQA,QAAQ,UAAhB,UAEE,iBAAQ,CACN,GAAM,QADR,QAGA,4BAAW,0BAAYC,WAAW,KAAvB,QAAX,uEAAkI,0BAAYA,WAAW,KAAvB,QAAlI,OAA0L,0BAAYA,WAAW,KAAvB,UAA1L,KACA,qBAAG,0BAAYA,WAAW,KAAvB,QAAH,cAAkE,0BAAYA,WAAW,KAAvB,QAAlE,UAA6H,0BAAYA,WAAW,KAAvB,UAA7H,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qHAA4HC,QAAS,CACtKL,QACAH,kBACAS,oBACAC,eACAC,UACAC,YACCR,QAAQ,cACb,YAAC,IAAD,CAAQS,KAAK,UAAUT,QAAQ,UAA/B,SACA,YAAC,IAAD,CAAQS,KAAK,SAAST,QAAQ,UAA9B,SACA,YAAC,IAAD,CAAQS,KAAK,SAAST,QAAQ,UAA9B,WAEE,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,uFAA0FC,QAAS,CACpIL,QACAH,kBACAS,oBACAC,eACAC,UACAC,YACCR,QAAQ,cACb,YAAC,IAAD,CAAQU,UAAQ,EAACV,QAAQ,UAAzB,SACA,YAAC,IAAD,CAAQU,UAAQ,EAACD,KAAK,SAAST,QAAQ,UAAvC,UAEE,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,kCAAmCC,QAAS,CAC7EL,QACAH,kBACAS,oBACAC,eACAC,UACAC,YACCR,QAAQ,cACb,YAAC,IAAD,CAAQW,UAAQ,EAACX,QAAQ,UAAzB,UAEE,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,wLAAyLC,QAAS,CACnOL,QACAH,kBACAS,oBACAC,eACAC,UACAC,YACCR,QAAQ,eACZ,WAAM,MAC6BK,oBAAS,GAAhCO,EADN,KACeC,EADf,KAED,OAAO,YAAC,IAAD,CAAQD,QAASA,EAASE,QAAS,kBAAMD,GAAYD,IAAUZ,QAAQ,UAAvE,qB,wLASfH,EAAWkB,gBAAiB","file":"component---docs-button-mdx-bf214d11b966fee594ea.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/daybreak/daybreak/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport Button from '../src/button/button.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Form } from 'daybreak';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<Button>Basic</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Button\n    }} mdxType=\"Playground\">\n  <Button mdxType=\"Button\">Basic</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"mode\"\n    }}>{`Mode`}</h2>\n    <p>{`the `}<inlineCode parentName=\"p\">{`mode`}</inlineCode>{` prop determine the\tappearance of the button, the default value of `}<inlineCode parentName=\"p\">{`mode`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`normal`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`mode`}</inlineCode>{` 属性决定按钮的外观，`}<inlineCode parentName=\"p\">{`mode`}</inlineCode>{` 的默认值为 `}<inlineCode parentName=\"p\">{`normal`}</inlineCode>{`。`}</p>\n    <Playground __position={1} __code={'<Button mode=\\\"primary\\\">Enter</Button>\\n<Button mode=\\\"danger\\\">Leave</Button>\\n<Button mode=\\\"normal\\\">Cancel</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Button\n    }} mdxType=\"Playground\">\n  <Button mode=\"primary\" mdxType=\"Button\">Enter</Button>\n  <Button mode=\"danger\" mdxType=\"Button\">Leave</Button>\n  <Button mode=\"normal\" mdxType=\"Button\">Cancel</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"outlined\"\n    }}>{`Outlined`}</h2>\n    <Playground __position={2} __code={'<Button outlined>Enter</Button>\\n<Button outlined mode=\\\"danger\\\">\\n  Leave\\n</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Button\n    }} mdxType=\"Playground\">\n  <Button outlined mdxType=\"Button\">Enter</Button>\n  <Button outlined mode=\"danger\" mdxType=\"Button\">Leave</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <Playground __position={3} __code={'<Button disabled>Enter</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Button\n    }} mdxType=\"Playground\">\n  <Button disabled mdxType=\"Button\">Enter</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"loading\"\n    }}>{`Loading`}</h2>\n    <Playground __position={4} __code={'() => {\\n  const [loading, setLoading] = useState(false)\\n  return (\\n    <Button loading={loading} onClick={() => setLoading(!loading)}>\\n      Click to Load\\n    </Button>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [loading, setLoading] = useState(false);\n        return <Button loading={loading} onClick={() => setLoading(!loading)} mdxType=\"Button\">\n        Click to Load\n      </Button>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}